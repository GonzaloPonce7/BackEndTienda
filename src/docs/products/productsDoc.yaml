paths:
  /api/products:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
      responses:
        "200":
          description: Los productos fueron devuelvos satisfactoriamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Products'
        "500":
          description: Error interno del server. Query defectuosa o un fallo a la conexion a la DB
  /api/products/{pid}:
    get:
      summary: Obtiene un product
      tags:
        - Products
      parameters:
      - name: pid
        in: path
        required: true
        description: ID del producto que se solicita
        schema:
          $type: String
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Products'
    put:
      summary: actualiza un producto a partir del ID
      tags:
        - Products
      parameters:
      - name: pid
        in: path
        required: true
        description: ID del producto que se solicita
        schema:
          $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateProduct'
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generado en mongo
        title:
          type: String
          description: Nombre del producto
        description:
          type: String
          description: Descripcion del producto
        price:
          type: Number
          description: Precio del producto
        thumnail:
          type: String
          description: Url imagen del prodcuto
        stock:
          type: Number
          description: Cantidad del producto almacenado en el stock
        code:
          type: String
          description: Codigo alfanumerico unico del producto
        status:
          type: Boolean
          description: Disponibilidad
        category:
          type: String
          description: Tipo de producto
      example:
        _id: ObjectId("63d05a63e763debe04cc8dfe")
        title: Drago
        description: Cerveza Roja
        price: 100$
        stock: 20
        code: kjfbnvfvn4in345m345n6b2456k3b45
        status: true
        category: Cerveza
  requestBodies:
    updateProduct:
      type: object
      properties:
        title:
          type: String
          description: Nombre del producto
        description:
          type: String
          description: Descripcion del producto
        price:
          type: Number
          description: Precio del producto
        stock:
          type: Number
          description: Cantidad en stock
        code:
          type: String
          description: Codigo alfanumerico unico
        status:
          type: Boolean
          description: Disponibilidad
        category:
          type: String
          description: Tipo de producto
      example:
        title: Drago
        description: Cerveza Roja
        price: 100$
        stock: 20
        code: kjfbnvfvn4in345m345n6b2456k3b45
        status: true
        category: Cerveza
tags: []